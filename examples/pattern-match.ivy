
-- Bind the value true to the symbol "condition".
let condition = True;

-- The "match" keyword is an expression, meaning that it produces a value. It
-- takes some symbol (in this case "condition") to match a pattern (in this 
-- case either True or False) and returns the result to the right of the arrow. 

-- This expression would return the string value "i agree".
match condition with (
    | True  -> "i agree" 
    | False -> "i disagree" 
);

-- Define an integer variable.
let month = 9;

-- Since the match keyword produces a value, we can use it directly on a 
-- function. In this case, we define a function monthToStr that when given an
-- integer, returns the equivalent string representation of the month. 
let monthToStr = fn (month_int) => match month_int with (
    | 1 ->  Some("january")
    | 2 ->  Some("february")
    | 3 ->  Some("march")
    | 4 ->  Some("april")
    | 5 ->  Some("may")
    | 6 ->  Some("june")
    | 7 ->  Some("july")
    | 8 ->  Some("august")
    | 9 ->  Some("september")
    | 10 -> Some("october")
    | 11 -> Some("november")
    | 12 -> Some("december")
    | _  -> None
);

-- Here we call the function month_to_str
let month_name = monthToStr(month);

println("month #", month, " is ", month_name);

let temp = 68;

println(temp, " => ", match (temp) with (
    | temp <= 0   ->  "it's extremely cold! stay inside..."
    | temp <= 55 ->  "it's chilly out, wear a hoodie."
    | temp <= 75  ->  "it's nice out, dress comfortably."
    | temp <= 100 ->  "it's dumb hot out, wear sunscreen."
));



